#!/usr/bin/env ruby

# ================================================================
# John Kerl
# 2012-05-20
# Makes sequential numbered backups of given files.  E.g.  first "nbu foo"
# makes foo.000; next "nbu foo" makes foo.001; etc.
# ================================================================

require 'fileutils'

$us     = File.basename($0)
$ourdir = File.dirname($0)

$width = 3
$max_extension = (10**$width) - 1
$fmt = "%%0%dd" % ($width) # No "%0*d" in Ruby?

# ----------------------------------------------------------------
def make_numbered_backup(file_path, dest_dir)
   i = 0
   while i <= $max_extension
      extension = $fmt % i
      if dest_dir.nil?
        file_path_with_extension = "#{file_path}.#{extension}"
      else
        file_name = File.basename(file_path)
        file_path_with_extension = "#{dest_dir}/#{file_name}.#{extension}"
      end

      unless test(?e, file_path_with_extension)
         FileUtils.cp(file_path, file_path_with_extension)
         puts file_path_with_extension
         return true
      end
      i += 1
   end
   $stderr.puts "#{$us}:  extensions full up to " + \
      "#{file_name}.#{$max_extension}"
   return false
end

# ----------------------------------------------------------------
dest_dir = nil
if ARGV.length >= 2 && ARGV[0] == '-d'
  ARGV.shift
  dest_dir = ARGV.shift
end
if ARGV.length < 1
   $stderr.puts "Usage: #{$us} {file names to back up}"
   exit 1
end

ok = true
for file_path in ARGV
   ok &= make_numbered_backup(file_path, dest_dir)
end

exit (ok == true) ? 0 : 1
