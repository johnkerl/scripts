#!/usr/bin/ruby

# ================================================================
# We convert from CSKV to CSV format as follows:
# For each data line of the form "x=1,y=2,z=3": if the header hasn't been
# already written then write "x,y,z"; then write "1,2,3".
#
# John Kerl, 2012-03-31
# ================================================================

@@us     = File.basename($0)
@@ourdir = File.dirname($0)

require 'getoptlong'

# ================================================================
def main()
	filenames = []

	getopt = GetoptLong.new(
		[ '-h', '--help',    GetoptLong::NO_ARGUMENT ]
	)
	getopt.each do |opt, arg|
		case opt
			when "-h"; puts "help"
		end
	end
	filenames = ARGV

	ok = true
	if filenames.length == 0:
		ok &= do_stdin
	else
		for filename in filenames
			ok &= do_file(filename)
		end
	end

	exit ok ? 0 : 1
end

# ----------------------------------------------------------------
def do_line(input_line, line_number)
	# xxx assert homogeneity
	kvs = input_line.split(/,/)
	if line_number == 0
		puts kvs.collect{|kv| kv.sub(/=.*/, "")}.join(',')
	end
	puts kvs.collect{|kv| kv.sub(/.*=/, "")}.join(',')
end

# ----------------------------------------------------------------
# Streaming
def do_stdin()
	# xxx refactor to do stream logic only once; also, make sure this is really streaming.
	$stdin.readlines().each_with_index do |input_line, line_number|
		input_line.chomp!
		begin
			do_line(input_line, line_number)
		rescue Errno::EPIPE # E.g. we're piped to head
			break
		end
	end
	return true
end

# ----------------------------------------------------------------
# Streaming
def do_file(filename)
	if ! File.exists?(filename)
		$stderr.puts "Can't find \"#{filename}\"."
		return false
	end
	File.readlines(filename).each_with_index do |input_line, line_number|
		input_line.chomp!
		begin
			do_line(input_line, line_number)
		rescue Errno::EPIPE # E.g. we're piped to head
			break
		end
	end
	return true
end

# ================================================================
# Top-down programming style, please.
main()
