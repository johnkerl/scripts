#!/usr/bin/python -Wall

# ================================================================
# Copyright (c) John Kerl 2007
# kerl.john.r@gmail.com
# ================================================================

from __future__ import division # 1/2 = 0.5, not 0.
import sys
from sackmat_m import *
import math

ntheta = 100
thetalo = 0.0
thetahi = 2.0 * math.pi
deltatheta = (thetahi-thetalo)/ntheta
theta = thetalo
for k in range(0, ntheta):
	u = [1.0, 0.0]
	w = [math.cos(theta), math.sin(theta)]

	uhat = vechat(u)
	what = vechat(w)
	vhat = vechat(vecadd(uhat, what))

	z1  = vecsub(uhat, vhat)
	z2  = vecsub(vhat, what)

	[Q1, sign] = householder_vector_to_Q(z1)
	[Q2, sign] = householder_vector_to_Q(z2)
	Q  = Q2 * Q1

	Quhat  = matrix_times_vector(Q, uhat)
	err = vecsub(what, Quhat)

	print "theta/2pi=%7.4f" % (theta/2.0/math.pi)
	#Q1u = matrix_times_vector(Q1, u)
	#print "u:   ",; print_row_vector(u)
	#print "w:   ",; print_row_vector(w)
	print "u^:  ",; print_row_vector(uhat)
	#print "v^:  ",; print_row_vector(vhat)
	print "w^:  ",; print_row_vector(what)
	#print "z1:  ",; print_row_vector(z1)
	#print "z2:  ",; print_row_vector(z2)
	print "Qu^: ",; print_row_vector(Quhat)
	#print "Q1u: ",; print_row_vector(Q1u)
	#print "err: ",; print_row_vector(err, "%11.3e")
	print "err: ",; print_row_vector(err)
	#print "Q1:  ";  print_matrix(Q1)
	#print "Q2:  ";  print_matrix(Q2)
	print "Q:   ";  print_matrix(Q)
	print

	print "----------------------------------------------------------------"


	theta += deltatheta
