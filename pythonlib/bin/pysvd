#!/usr/bin/python -Wall

# ================================================================
# John Kerl
# kerl.john.r@gmail.com
# 2008-03-02
# ================================================================

from __future__ import division # 1/2 = 0.5, not 0.
import sys
from sackmat_m import *
from math import *

argc = len(sys.argv)
if (argc < 2):
	print >> sys.stderr, "Usage: %s {file names ...}" % (sys.argv[0])
	sys.exit(1)

# xxx temp code -- I will put this into sackmat once it makes sense.
argi = 1
while (argi < argc):
	A = read_matrix(float, sys.argv[argi])

	At = A.star()
	V = At * A
	U = A  * At

	[not_used, D] = rs_eigensystem(V)
	n = D.square_dim()
	for i in range(0, n):
		D[i][i] = sqrt(D[i][i])

	print "A:"; U.printf(); print
	print "U:"; U.printf(); print
	print "D:"; D.printf(); print
	print "V:"; V.printf(); print

	print "AaA"
	UDV = U*D*V.star()
	print "AAA"
	UUt = U*U.star()
	print "AAA"
	VVt = V*V.star()

	print "UU':"; UUt.printf(); print
	print "VV':"; VVt.printf(); print
	print "UDV':"; UDV.printf(); print

	if (argi < (argc-1)):
		print
	argi += 1
